plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlinx-serialization'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.apollographql.apollo'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.moviecatalogue"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.example.moviecatalogue.di.HiltTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    apollo {
        generateKotlinModels = true
        schemaFile = file("src/main/java/com/example/moviecatalogue/graphql/schema.json")
        rootPackageName = defaultConfig.applicationId + ".graphql"
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
    sourceSets {
        test {
            java.srcDirs += "src/sharedTest/java"
        }
        androidTest {
            java.srcDirs += "src/sharedTest/java"
        }
    }
}

dependencies {
    // Standard library
    implementation "androidx.appcompat:appcompat:$rootProject.appCompatVersion"
    implementation "androidx.legacy:legacy-support-v4:$rootProject.legacySupportVersion"

    // UI
    implementation "com.google.android.material:material:$rootProject.materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"

    // Kotlin KTX
    implementation "androidx.core:core-ktx:$rootProject.coreKtxVersion"
    implementation "androidx.fragment:fragment-ktx:$rootProject.fragmentKtxVersion"

    // Kotlin Serialization
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:$rootProject.kotlinSerializationVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$rootProject.kotlinSerializationVersion"

    // Navigation Component
    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.navigationKtxVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.navigationKtxVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    kapt "com.github.bumptech.glide:compiler:$rootProject.glideVersion"

    // Apollo
    implementation "com.apollographql.apollo:apollo-runtime:$rootProject.apolloVersion"
    implementation "com.apollographql.apollo:apollo-coroutines-support:$rootProject.apolloVersion"

    // Hilt
    implementation "com.google.dagger:hilt-android:$rootProject.hiltVersion"
    kapt "androidx.hilt:hilt-compiler:$rootProject.hiltCompilerVersion"
    kapt "com.google.dagger:hilt-android-compiler:$rootProject.hiltVersion"
    kaptTest "com.google.dagger:hilt-android-compiler:$rootProject.hiltVersion"
    testImplementation "com.google.dagger:hilt-android-testing:$rootProject.hiltVersion"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$rootProject.hiltVersion"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$rootProject.hiltVersion"

    //OkHttp3
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okHttp3Version"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okHttp3Version"
    testImplementation "com.squareup.okhttp3:mockwebserver:$rootProject.okHttp3Version"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$rootProject.okHttp3Version"

    // Espresso
    implementation "androidx.test.espresso:espresso-idling-resource:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$rootProject.espressoVersion"

    // Standard Testing
    testImplementation "junit:junit:$rootProject.junitVersion"
    testImplementation "androidx.arch.core:core-testing:$rootProject.coreTestingVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$rootProject.coreTestingVersion"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.junitExtVersion"

    // Mockk
    testImplementation "io.mockk:mockk:$rootProject.mockkVersion"

    // Kotlin Coroutines
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutinesCoreVersion"
}